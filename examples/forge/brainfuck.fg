var run = |code| {
	# TODO: Find a better syntax to create long arrays.. maybe [x] * n?
	var tape_1000 = [];
	for _ in 0..100 {
		tape_1000 += [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
	}
	var tape = [];
	for _ in 0..30 {
		tape += tape_1000;
	}

	var tape_ptr = 0;
	var code_ptr = 0;
	var output = "";
	var inp = "";

	var running = true;
	while running {
		var instr = code[code_ptr];
		if instr == null {
			running = false;
		} else {
			if instr == '>' { tape_ptr += 1; }
			if instr == '<' { tape_ptr -= 1; }
			if instr == '+' { tape[tape_ptr] = (tape[tape_ptr] + 1) % 256; }
			if instr == '-' { tape[tape_ptr] = (tape[tape_ptr] - 1) % 256; }
			if instr == ',' {
				# This is kind of a hack
				print output;
				output = "";

				# This is definitely a hack
				while inp[0] == null {
					inp = (input ' ') as str;
				}
				tape[tape_ptr] = inp[0] as num;
				inp[0..1] = "";
			}
			if instr == '[' and tape[tape_ptr] == 0 {
				code_ptr += 1;
				var balance = 0;
				while code[code_ptr] != ']' or balance != 0 {
					if code[code_ptr] == '[' { balance += 1; }
					if code[code_ptr] == ']' { balance -= 1; }
					code_ptr += 1;
				}
			}
			if instr == ']' and tape[tape_ptr] != 0 {
				code_ptr -= 1;
				var balance = 0;
				while code[code_ptr] != '[' or balance != 0 {
					if code[code_ptr] == '[' { balance += 1; }
					if code[code_ptr] == ']' { balance -= 1; }
					code_ptr -= 1;
				}
			}
			if instr == '.' {
				output += tape[tape_ptr] as char;
			}

			code_ptr += 1;
		}
	}

	print output;
};

var hello_world = "++++++++++[>+++++++>++++++++++>+++>+<<<<-]>++.>+.+++++++..+++.>++.<<+++++++++++++++.>.+++.------.--------.>+.>.";

# ++++++++[>+>++++<<-]>++>>+<[-[>>+<<-]+>>]>+[-<<<[->[+[-]+>++>>>-<<]<[<]>>++++++[<<+++++>>-]+<<++.[-]<<]>.>+[>>]>+]

var groves_42 = "
           +++++[>++[>+>+        ++>++++>++++>++++>++++++
          >++++++>+++++++        ++>+++++++++<<<<<<<<<-]>>
         >+>+>+> >>>+[<]<        -]>>       >++>-->>+>>++>+
        >--<<<<  <<<.....         .>            ....<......
       ...>...   <<.>....                       >.>>>>>.<.
       <<<<..     ..<....                      >..>>>>>.<
      .<<<<.      >>>.<<.                     >>>>>.<.<
      <<<<<       <.>...>                    >>>.>>>.
     <<<.<        <<<..>>                  .>>>>>.<
    <.<<<         <<...>>                 >>>.<<<
   <..<.          ...>...               <<.>..>.
   >>.<.<<...>>...<<...>>...<         <....>>..
  .<<<.>.>>..>.<<.......<....        .....>...
                 <<.>...            .....>...
                 <......           .>>>.<<..
                 <<.>...          .....>...<......>.>>.<.<<<
                 .>......        ..>>...<<....>>.....>.<..>.
";

run(groves_42);
